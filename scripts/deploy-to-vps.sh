#!/bin/bash

# ===============================================
# –ë—ã—Å—Ç—Ä—ã–π –¥–µ–ø–ª–æ–π –Ω–∞ VPS nkolosov.com
# ===============================================

set -e

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è VPS
VPS_HOST="79.174.78.124"
VPS_USER="root"
VPS_DOMAIN="nkolosov.com"
PROJECT_DIR="/home/portfolio"

# Colors
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

log() {
    echo -e "${GREEN}[$(date '+%Y-%m-%d %H:%M:%S')] $1${NC}"
}

error() {
    echo -e "${RED}[ERROR] $1${NC}"
    exit 1
}

warning() {
    echo -e "${YELLOW}[WARNING] $1${NC}"
}

info() {
    echo -e "${BLUE}[INFO] $1${NC}"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ SSH –∫–ª—é—á–∞
check_ssh_key() {
    if [ ! -f ~/.ssh/id_rsa ] && [ ! -f ~/.ssh/id_ed25519 ]; then
        warning "SSH –∫–ª—é—á –Ω–µ –Ω–∞–π–¥–µ–Ω. –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π..."
        ssh-keygen -t ed25519 -C "deploy@nkolosov.com" -f ~/.ssh/id_ed25519 -N ""
        
        echo ""
        echo -e "${YELLOW}–°–∫–æ–ø–∏—Ä—É–π—Ç–µ —ç—Ç–æ—Ç –ø—É–±–ª–∏—á–Ω—ã–π –∫–ª—é—á –Ω–∞ VPS —Å–µ—Ä–≤–µ—Ä:${NC}"
        cat ~/.ssh/id_ed25519.pub
        echo ""
        echo "–í—ã–ø–æ–ª–Ω–∏—Ç–µ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ:"
        echo "mkdir -p ~/.ssh && echo 'YOUR_PUBLIC_KEY' >> ~/.ssh/authorized_keys && chmod 700 ~/.ssh && chmod 600 ~/.ssh/authorized_keys"
        echo ""
        read -p "–ù–∞–∂–º–∏—Ç–µ Enter –ø–æ—Å–ª–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–ª—é—á–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä..."
    fi
}

# –ü–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ VPS
setup_vps() {
    log "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ VPS —Å–µ—Ä–≤–µ—Ä–∞ $VPS_HOST..."
    
    # –ö–æ–ø–∏—Ä—É–µ–º —Å–∫—Ä–∏–ø—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –Ω–∞ —Å–µ—Ä–≤–µ—Ä
    scp scripts/setup-vps.sh $VPS_USER@$VPS_HOST:/tmp/
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫—É
    ssh $VPS_USER@$VPS_HOST << 'EOF'
        chmod +x /tmp/setup-vps.sh
        /tmp/setup-vps.sh
        rm /tmp/setup-vps.sh
EOF
    
    log "VPS –Ω–∞—Å—Ç—Ä–æ–µ–Ω —É—Å–ø–µ—à–Ω–æ"
}

# –°–æ–∑–¥–∞–Ω–∏–µ .env —Ñ–∞–π–ª–∞ –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞
create_production_env() {
    log "–°–æ–∑–¥–∞–Ω–∏–µ production .env —Ñ–∞–π–ª–∞..."
    
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å–ª—É—á–∞–π–Ω—ã–µ –ø–∞—Ä–æ–ª–∏
    DB_PASSWORD=$(openssl rand -base64 32 | tr -d "=+/" | cut -c1-25)
    NEXTAUTH_SECRET=$(openssl rand -base64 32)
    ENCRYPTION_KEY=$(openssl rand -base64 24)
    
    cat > .env.production << EOF
# Production Configuration for nkolosov.com
NODE_ENV=production
PORT=3000
HOSTNAME=0.0.0.0

# Next.js Settings
NEXT_TELEMETRY_DISABLED=1
NEXTAUTH_URL=https://nkolosov.com
NEXTAUTH_SECRET=${NEXTAUTH_SECRET}

# Database Configuration
DATABASE_URL=postgresql://portfolio_user:${DB_PASSWORD}@postgres:5432/portfolio
POSTGRES_DB=portfolio
POSTGRES_USER=portfolio_user
POSTGRES_PASSWORD=${DB_PASSWORD}
POSTGRES_PORT=5432

# Redis Configuration
REDIS_URL=redis://redis:6379
REDIS_PORT=6379

# Email Configuration
SMTP_HOST=smtp.gmail.com
SMTP_PORT=587
SMTP_USER=your-email@gmail.com
SMTP_PASS=your-app-password
SMTP_FROM=noreply@nkolosov.com

# Security
ENCRYPTION_KEY=${ENCRYPTION_KEY}
CORS_ORIGIN=https://nkolosov.com

# Monitoring & Logging
LOG_LEVEL=info

# Docker Compose Ports
APP_PORT=3000
NGINX_HTTP_PORT=80
NGINX_HTTPS_PORT=443

# SSL Configuration
SSL_CERT_PATH=/etc/nginx/ssl/cert.pem
SSL_KEY_PATH=/etc/nginx/ssl/private.key

# Backup Configuration
BACKUP_SCHEDULE=0 2 * * *
BACKUP_RETENTION_DAYS=30
EOF

    log "Production .env —Ñ–∞–π–ª —Å–æ–∑–¥–∞–Ω"
    warning "–ù–µ –∑–∞–±—É–¥—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å SMTP_USER –∏ SMTP_PASS –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ email"
}

# –î–µ–ø–ª–æ–π –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
deploy_application() {
    log "–î–µ–ø–ª–æ–π –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –Ω–∞ $VPS_HOST..."
    
    # –°–æ–∑–¥–∞–µ–º –∞—Ä—Ö–∏–≤ –ø—Ä–æ–µ–∫—Ç–∞
    tar -czf portfolio-deploy.tar.gz \
        --exclude='.git' \
        --exclude='node_modules' \
        --exclude='.next' \
        --exclude='logs' \
        --exclude='*.log' \
        --exclude='.env' \
        .
    
    # –ö–æ–ø–∏—Ä—É–µ–º –Ω–∞ —Å–µ—Ä–≤–µ—Ä
    scp portfolio-deploy.tar.gz $VPS_USER@$VPS_HOST:/tmp/
    scp .env.production $VPS_USER@$VPS_HOST:/tmp/
    
    # –í—ã–ø–æ–ª–Ω—è–µ–º –¥–µ–ø–ª–æ–π –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
    ssh $VPS_USER@$VPS_HOST << EOF
        set -e
        
        # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–æ–µ–∫—Ç–∞
        mkdir -p $PROJECT_DIR
        cd $PROJECT_DIR
        
        # –°–æ–∑–¥–∞–µ–º –±—ç–∫–∞–ø –µ—Å–ª–∏ –µ—Å—Ç—å —Ç–µ–∫—É—â–∞—è –≤–µ—Ä—Å–∏—è
        if [ -d "current" ]; then
            mv current backup-\$(date +%Y%m%d_%H%M%S) 2>/dev/null || true
        fi
        
        # –†–∞—Å–ø–∞–∫–æ–≤—ã–≤–∞–µ–º –Ω–æ–≤—É—é –≤–µ—Ä—Å–∏—é
        mkdir -p current
        cd current
        tar -xzf /tmp/portfolio-deploy.tar.gz
        
        # –ö–æ–ø–∏—Ä—É–µ–º .env —Ñ–∞–π–ª
        cp /tmp/.env.production .env
        
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–∞–≤–∞
        chmod +x scripts/*.sh
        chown -R portfolio:portfolio .
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –¥–µ–ø–ª–æ–π
        ./scripts/deploy.sh
        
        # –û—á–∏—Å—Ç–∫–∞
        rm /tmp/portfolio-deploy.tar.gz /tmp/.env.production
        
        echo "–î–µ–ø–ª–æ–π –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!"
EOF
    
    # –û—á–∏—Å—Ç–∫–∞ –ª–æ–∫–∞–ª—å–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
    rm portfolio-deploy.tar.gz .env.production
    
    log "–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç–æ —É—Å–ø–µ—à–Ω–æ!"
}

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞
setup_ssl() {
    log "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞ –¥–ª—è $VPS_DOMAIN..."
    
    ssh $VPS_USER@$VPS_HOST << EOF
        # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ certbot –µ—Å–ª–∏ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω
        apt update
        apt install -y certbot python3-certbot-nginx
        
        # –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞
        certbot --nginx -d $VPS_DOMAIN -d www.$VPS_DOMAIN --non-interactive --agree-tos --email noreply@$VPS_DOMAIN
        
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
        echo "0 12 * * * /usr/bin/certbot renew --quiet && docker restart portfolio_nginx" | crontab -
        
        # –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ Nginx
        docker restart portfolio_nginx
EOF
    
    log "SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –Ω–∞—Å—Ç—Ä–æ–µ–Ω"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏
health_check() {
    log "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è..."
    
    local max_attempts=10
    local attempt=1
    
    while [ $attempt -le $max_attempts ]; do
        if curl -f -s https://$VPS_DOMAIN/health > /dev/null; then
            log "‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!"
            log "üåê –î–æ—Å—Ç—É–ø–Ω–æ –ø–æ –∞–¥—Ä–µ—Å—É: https://$VPS_DOMAIN"
            return 0
        fi
        
        info "–ü–æ–ø—ã—Ç–∫–∞ $attempt/$max_attempts - –æ–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞..."
        sleep 30
        ((attempt++))
    done
    
    error "–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç –ø–æ—Å–ª–µ $max_attempts –ø–æ–ø—ã—Ç–æ–∫"
}

# –ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –¥–µ–ø–ª–æ–µ
show_deploy_info() {
    echo ""
    echo -e "${BLUE}=== –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –¥–µ–ø–ª–æ–µ ===${NC}"
    echo -e "üåê –î–æ–º–µ–Ω: ${GREEN}https://$VPS_DOMAIN${NC}"
    echo -e "üñ•Ô∏è  VPS: ${GREEN}$VPS_HOST${NC}"
    echo -e "üìÅ –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: ${GREEN}$PROJECT_DIR/current${NC}"
    echo ""
    echo -e "${BLUE}=== –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã ===${NC}"
    echo -e "–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Å–µ—Ä–≤–µ—Ä—É: ${YELLOW}ssh $VPS_USER@$VPS_HOST${NC}"
    echo -e "–ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤: ${YELLOW}ssh $VPS_USER@$VPS_HOST 'cd $PROJECT_DIR/current && make logs'${NC}"
    echo -e "–°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤: ${YELLOW}ssh $VPS_USER@$VPS_HOST 'cd $PROJECT_DIR/current && make status'${NC}"
    echo -e "–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫: ${YELLOW}ssh $VPS_USER@$VPS_HOST 'cd $PROJECT_DIR/current && make restart'${NC}"
    echo ""
}

# –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    log "–ù–∞—á–∏–Ω–∞–µ–º –¥–µ–ø–ª–æ–π Portfolio –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –Ω–∞ nkolosov.com"
    
    case "${1:-full}" in
        "setup")
            check_ssh_key
            setup_vps
            ;;
        "deploy")
            create_production_env
            deploy_application
            health_check
            ;;
        "ssl")
            setup_ssl
            health_check
            ;;
        "full")
            check_ssh_key
            setup_vps
            create_production_env
            deploy_application
            setup_ssl
            health_check
            show_deploy_info
            ;;
        "check")
            health_check
            ;;
        *)
            echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 {full|setup|deploy|ssl|check}"
            echo "  full   - –ü–æ–ª–Ω—ã–π –¥–µ–ø–ª–æ–π (–Ω–∞—Å—Ç—Ä–æ–π–∫–∞ + –¥–µ–ø–ª–æ–π + SSL)"
            echo "  setup  - –¢–æ–ª—å–∫–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ VPS"
            echo "  deploy - –¢–æ–ª—å–∫–æ –¥–µ–ø–ª–æ–π –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"
            echo "  ssl    - –¢–æ–ª—å–∫–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ SSL"
            echo "  check  - –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏"
            exit 1
            ;;
    esac
    
    log "–û–ø–µ—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ! üéâ"
}

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è
trap 'echo -e "\n${RED}–î–µ–ø–ª–æ–π –ø—Ä–µ—Ä–≤–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º${NC}"; exit 1' INT

# –ó–∞–ø—É—Å–∫
main "$@"
